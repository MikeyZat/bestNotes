{"version":3,"sources":["visualComponents/FrameTitle.js","logicalComponents/FrameTitleContainer.js","visualComponents/AddButton.js","logicalComponents/AddButtonContainer.js","visualComponents/Form.js","visualComponents/DeleteButton.js","logicalComponents/DeleteButtonContainer.js","visualComponents/ThingToDo.js","logicalComponents/ThingToDoContainer.js","visualComponents/Frame.js","logicalComponents/FrameContainer.js","visualComponents/App.js","visualComponents/LoginPage.js","logicalComponents/AppContainer.js","serviceWorker.js","index.js"],"names":["FrameTitle","props","react_default","a","createElement","className","message","FrameTitleContainer","this","rateOfDone","visualComponents_FrameTitle","Component","AddButton","onClick","AddButtonContainer","visualComponents_AddButton","Form","htmlFor","type","id","name","DeleteButton","index","DeleteButtonContainer","visualComponents_DeleteButton","ThingToDo","changeCheck","document","getElementById","click","labelStyle","spanStyle","done","textDecoration","color","background","fontWeight","style","task","onChange","handleChange","logicalComponents_DeleteButtonContainer","deleteNote","ThingToDoContainer","prevProps","xhr","XMLHttpRequest","data","JSON","stringify","userName","text","responseType","onreadystatechange","readyState","DONE","response","ok","console","log","open","setRequestHeader","send","visualComponents_ThingToDo","Frame","notes","map","note","logicalComponents_ThingToDoContainer","key","toString","handleCheckboxChange","length","logicalComponents_FrameTitleContainer","visualComponents_Form","logicalComponents_AddButtonContainer","addNote","FrameContainer","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","createSound","Audio","deleteSound","volume","checkSound","addEventListener","event","toLowerCase","getElementsByClassName","_this2","newNotes","i","newNote","push","setState","concat","slice","target","play","input","value","deletedNote","splice","visualComponents_Frame","App","logicalComponents_FrameContainer","LoginPage","error","onSubmit","e","preventDefault","placeholder","AppContainer","logged","user","loginMessage","logIn","visualComponents_App","visualComponents_LoginPage","Boolean","window","location","hostname","match","ReactDOM","render","logicalComponents_AppContainer","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e80382c.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../themes/FrameTitle.css';\r\n\r\nconst FrameTitle = (props) => {\r\n\r\n\r\n    return (\r\n        <header className=\"FrameTitle\">\r\n            <h1>things to do:</h1>\r\n            <h3>{props.message}</h3>\r\n        </header>\r\n    );\r\n\r\n};\r\n\r\nexport default FrameTitle;\r\n","import React, {Component} from 'react';\r\nimport FrameTitle from '../visualComponents/FrameTitle'\r\n\r\nclass FrameTitleContainer extends Component {\r\n    render() {\r\n        let message = \"\";\r\n        if (this.props.rateOfDone === -1) {\r\n            message = \"Hi, what must you do today?\"\r\n        } else if (this.props.rateOfDone === 0) {\r\n            message = \"Let's get down to work!\";\r\n        } else if (this.props.rateOfDone < 0.3) {\r\n            message = \"Keep it going!\";\r\n        } else if (this.props.rateOfDone < 0.4) {\r\n            message = \"You're on a good way!\";\r\n        } else if (this.props.rateOfDone < 0.6) {\r\n            message = \"You're halfway there!\";\r\n        } else if (this.props.rateOfDone < 1) {\r\n            message = \"Almost finished!\";\r\n        } else if (this.props.rateOfDone === 1) {\r\n            message = \"Finished! I'm proud of you!\"\r\n        }\r\n\r\n\r\n        return (\r\n            <FrameTitle message={message}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FrameTitleContainer;\r\n","import React from 'react';\r\nimport '../themes/AddButton.css';\r\n\r\nconst AddButton = (props) => {\r\n\r\n    return (\r\n        <button onClick={props.onClick} className=\"AddButton\">Add</button>\r\n    );\r\n\r\n};\r\n\r\nexport default AddButton;\r\n","import React, {Component} from 'react';\r\nimport AddButton from '../visualComponents/AddButton'\r\n\r\nclass AddButtonContainer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <AddButton onClick={this.props.onClick}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddButtonContainer;\r\n","import React from 'react';\r\nimport '../themes/Form.css';\r\n\r\nconst Form = (props) => {\r\n\r\n    return (\r\n        <li className=\"Form\">\r\n            <label htmlFor=\"task\">Enter new task: </label>\r\n            <input type=\"text\" id=\"task\" name=\"task\"/>\r\n        </li>\r\n    );\r\n\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport '../themes/DeleteButton.css';\r\n\r\nconst DeleteButton = (props) => {\r\n\r\n    let handleClick = () => {\r\n        props.onClick(props.index);\r\n    };\r\n\r\n    return (\r\n        <button onClick={handleClick} className=\"DeleteButton\">X</button>\r\n    );\r\n\r\n};\r\n\r\nexport default DeleteButton;\r\n","import React, {Component} from 'react';\r\nimport DeleteButton from '../visualComponents/DeleteButton'\r\n\r\nclass DeleteButtonContainer extends Component {\r\n    render() {\r\n        return (\r\n            <DeleteButton onClick={this.props.onClick} index={this.props.index}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeleteButtonContainer;\r\n","import React from 'react';\r\nimport '../themes/ThingToDo.css';\r\nimport DeleteButtonContainer from '../logicalComponents/DeleteButtonContainer'\r\n\r\nconst ThingToDo = (props) => {\r\n\r\n    let changeCheck = () => {\r\n        let input = document.getElementById(props.index);\r\n        input.click();\r\n    };\r\n    let labelStyle = {};\r\n    let spanStyle = {};\r\n    if (props.done) {\r\n        labelStyle = {\r\n            textDecoration: \"line-through\",\r\n            color: \"#c2c2a3\"\r\n        };\r\n        spanStyle = {\r\n            background: \"#f5f5f0\",\r\n            color: \"#33cc33\",\r\n            fontWeight: \"bold\"\r\n        };\r\n        return (\r\n            <li className=\"ThingToDo\">\r\n                <span style={spanStyle} className=\"customCheck\" onClick={changeCheck}>&#x2713;</span>\r\n                <label style={labelStyle} htmlFor={props.index}>{props.task}</label>\r\n                <input type=\"checkbox\" id={props.index} name={props.index} onChange={props.handleChange}/>\r\n                <DeleteButtonContainer onClick={props.deleteNote} index={props.index}/>\r\n            </li>\r\n        );\r\n    }\r\n    return (\r\n        <li className=\"ThingToDo\">\r\n            <span style={spanStyle} className=\"customCheck\" onClick={changeCheck}> </span>\r\n            <label style={labelStyle} htmlFor={props.index}>{props.task}</label>\r\n            <input type=\"checkbox\" id={props.index} name={props.index} onChange={props.handleChange}/>\r\n        </li>\r\n    );\r\n\r\n};\r\n\r\nexport default ThingToDo;\r\n","import React, {Component} from 'react';\r\nimport ThingToDo from '../visualComponents/ThingToDo';\r\n\r\nclass ThingToDoContainer extends Component {\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.done !== this.props.done && prevProps.task === this.props.task) {\r\n            //updateTask(this.props.userName, this.props.task, this.props.done)\r\n            const xhr = new XMLHttpRequest();\r\n            const URL = 'http://bestnotesapi-env.qbmgq6ev8j.eu-west-1.elasticbeanstalk.com/updateTask';\r\n            const data = JSON.stringify({\r\n                userName: this.props.userName,\r\n                text: this.props.task,\r\n                done: this.props.done\r\n            });\r\n            xhr.responseType = 'json';\r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState === XMLHttpRequest.DONE) {\r\n                    if (xhr.response.ok)\r\n                        console.log(\"zmieniono pomyślnie\");\r\n                }\r\n            };\r\n            xhr.open('POST', URL);\r\n            xhr.setRequestHeader('Content-type',\r\n                'application/json');\r\n            xhr.send(data);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ThingToDo\r\n                handleChange={this.props.handleChange}\r\n                done={this.props.done}\r\n                task={this.props.task}\r\n                index={this.props.index}\r\n                deleteNote={this.props.deleteNote}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ThingToDoContainer;\r\n","import React from 'react';\r\nimport '../themes/Frame.css';\r\nimport FrameTitleContainer from \"../logicalComponents/FrameTitleContainer\";\r\nimport AddButtonContainer from \"../logicalComponents/AddButtonContainer\";\r\nimport Form from \"../visualComponents/Form\";\r\nimport ThingToDoContainer from \"../logicalComponents/ThingToDoContainer\";\r\n\r\nconst Frame = (props) => {\r\n    let rateOfDone = 0;\r\n    let notes = props.notes.map((note, index) => {\r\n        if (note.done)\r\n            rateOfDone++;\r\n        return (\r\n            <ThingToDoContainer\r\n                userName={props.userName}\r\n                key={index.toString()}\r\n                index={index}\r\n                done={note.done}\r\n                task={note.task}\r\n                handleChange={props.handleCheckboxChange}\r\n                deleteNote={props.deleteNote}/>);\r\n    });\r\n    if (props.notes.length > 0)\r\n        rateOfDone /= props.notes.length;\r\n    else\r\n        rateOfDone = -1;\r\n\r\n    return (\r\n        <section className=\"Frame\">\r\n            <FrameTitleContainer rateOfDone={rateOfDone}/>\r\n            <ul className=\"tasksList\">\r\n                {notes}\r\n                <Form/>\r\n            </ul>\r\n            <AddButtonContainer onClick={props.addNote}/>\r\n\r\n        </section>\r\n    );\r\n\r\n};\r\n\r\nexport default Frame;\r\n","import React, {Component} from 'react';\r\nimport Frame from '../visualComponents/Frame'\r\n\r\nclass FrameContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            notes: []\r\n        };\r\n\r\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\r\n        this.addNote = this.addNote.bind(this);\r\n        this.deleteNote = this.deleteNote.bind(this);\r\n        this.createSound = new Audio('soundOfPaper.mp3');\r\n        this.deleteSound = new Audio('paperTear.mp3');\r\n        this.deleteSound.volume = 0.3;\r\n        this.checkSound = new Audio('checkSound.mp3');\r\n        this.checkSound.volume = 0.5;\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        document.addEventListener(\"keyup\",\r\n            function (event) {\r\n                if (!(typeof event.key === \"undefined\"))\r\n                    if (event.key.toLowerCase() === \"enter\")\r\n                        document.getElementsByClassName(\"AddButton\")[0].click();\r\n            },\r\n            false);\r\n    }\r\n\r\n    componentWillMount() {\r\n        const URL = \"http://bestnotesapi-env.qbmgq6ev8j.eu-west-1.elasticbeanstalk.com/getTasks?\";\r\n        const nameParam = \"name=\";\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.responseType = 'json';\r\n        xhr.onreadystatechange = () => {\r\n            if (xhr.readyState === XMLHttpRequest.DONE) {\r\n                let newNotes = [];\r\n                for (let i = 0; i < xhr.response.length; i++) {\r\n                    let newNote = {\r\n                        done: xhr.response[i].done,\r\n                        task: xhr.response[i].text\r\n                    };\r\n                    newNotes.push(newNote);\r\n\r\n                }\r\n                this.setState({\r\n                    notes: newNotes\r\n                });\r\n            }\r\n        };\r\n        xhr.open('GET', `${URL}${nameParam}${this.props.userName}`, true);\r\n        xhr.send();\r\n    }\r\n\r\n    handleCheckboxChange(event) {\r\n        let newNotes = this.state.notes.slice(0);\r\n        let input = event.target;\r\n        let index = input.id;\r\n        newNotes[index].done = !newNotes[index].done;\r\n        if (newNotes[index].done)\r\n            this.checkSound.play();\r\n        this.setState({\r\n            notes: newNotes\r\n        });\r\n    }\r\n\r\n    addNote() {\r\n        let input = document.getElementById(\"task\");\r\n        if (input.value) {\r\n            const xhr = new XMLHttpRequest();\r\n            const URL = 'http://bestnotesapi-env.qbmgq6ev8j.eu-west-1.elasticbeanstalk.com/addTask';\r\n            const data = JSON.stringify({\r\n                userName: this.props.userName,\r\n                text: input.value\r\n            });\r\n            xhr.responseType = 'json';\r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState === XMLHttpRequest.DONE) {\r\n                    if (xhr.response.ok)\r\n                        console.log(\"dodano pomyślnie\");\r\n                }\r\n            };\r\n            xhr.open('POST', URL);\r\n            xhr.setRequestHeader('Content-type',\r\n                'application/json');\r\n            xhr.send(data);\r\n\r\n            this.createSound.play();\r\n            let newNote = {\r\n                done: false,\r\n                task: input.value\r\n            };\r\n            input.value = \"\";\r\n            let newNotes = this.state.notes.slice(0);\r\n            newNotes.push(newNote);\r\n            this.setState({\r\n                notes: newNotes\r\n            });\r\n        }\r\n    }\r\n\r\n    deleteNote(index) {\r\n        this.deleteSound.play();\r\n        let newNotes = this.state.notes.slice(0);\r\n        let deletedNote = newNotes.splice(index, 1);\r\n\r\n        const URL = \"http://bestnotesapi-env.qbmgq6ev8j.eu-west-1.elasticbeanstalk.com/deleteTask?\";\r\n        const nameParam = \"name=\";\r\n        const taskParam = \"text=\";\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.responseType = 'json';\r\n        xhr.onreadystatechange = () => {\r\n            if (xhr.readyState === XMLHttpRequest.DONE) {\r\n                console.log(xhr.response);\r\n            }\r\n        };\r\n        xhr.open('DELETE', `${URL}${nameParam}${this.props.userName}&${taskParam}${deletedNote[0].task}`, true);\r\n        xhr.send();\r\n        this.setState({\r\n            notes: newNotes\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Frame\r\n                userName={this.props.userName}\r\n                addNote={this.addNote}\r\n                notes={this.state.notes}\r\n                handleCheckboxChange={this.handleCheckboxChange}\r\n                deleteNote={this.deleteNote}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FrameContainer;\r\n","import React from 'react';\nimport '../themes/App.css';\nimport FrameContainer from \"../logicalComponents/FrameContainer\";\n\nconst App = (props) => {\n\n    return (\n        <div className=\"App\">\n            <FrameContainer userName={props.userName}/>\n        </div>\n    );\n\n};\n\nexport default App;\n","import React from 'react';\r\nimport '../themes/LoginPage.css';\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    let handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let name = document.getElementById(\"nick\").value;\r\n        props.onSubmit(name);\r\n    };\r\n    let style = {};\r\n    if (props.error) {\r\n        style = {\r\n            color: \"red\"\r\n        };\r\n    }\r\n\r\n    return (\r\n        <form className=\"LoginForm\" onSubmit={handleSubmit}>\r\n            <label style={style} htmlFor=\"nick\">{props.message}</label>\r\n            <input type=\"text\" name=\"nick\" id=\"nick\" placeholder=\"name\"/>\r\n            <input type=\"submit\" value=\"submit\"/>\r\n        </form>\r\n    );\r\n\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, {Component} from 'react';\r\nimport App from '../visualComponents/App';\r\nimport LoginPage from '../visualComponents/LoginPage';\r\n\r\nclass AppContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            logged: false,\r\n            user: \"\",\r\n            loginMessage: \"Who's there? Insert your name:\",\r\n            error: false\r\n        };\r\n        this.logIn = this.logIn.bind(this);\r\n    }\r\n\r\n    logIn(name) {\r\n        if (!name) {\r\n            this.setState({\r\n                loginMessage: \"I haven't found that account! Try again: \",\r\n                error: true\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            logged: true,\r\n            user: name.toLowerCase(),\r\n            error: false,\r\n            loginMessage: \"Who's there? Insert your name:\"\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.state.logged) {\r\n            return (\r\n                <App userName={this.state.user}/>\r\n            );\r\n        } else {\r\n            return (\r\n                <LoginPage error={this.state.error} message={this.state.loginMessage} onSubmit={this.logIn}/>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default AppContainer;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer from './logicalComponents/AppContainer';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppContainer/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}